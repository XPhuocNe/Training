/*........................................................................................................................................................................................................................................................................*/
// Link problem 1: https://oj.vnoi.info/problem/bedao_g08_magame
// Code solution:

#include <bits/stdc++.h>
#define NAME "XPhuoc"

using namespace std;

#define X first
#define Y second
#define pb push_back
#define Fort(i, a, b) for (int i = (a), _b = (b); i <= _b; i++)
#define Ford(i, a, b) for (int i = (a), _b = (b); i >= _b; i--)

typedef pair<int, int> pairII;
typedef pair<int, long long> pairIL;

const long long MOD = 1e9 + 7;

template<typename T>
    void mul(T &x, T y)
    {
        x *= y;
        x %= MOD;
    }

/*..............................................................................................................................................*/

int n;
string S;

void Read()
{
    cin >> S;

    n = S.size();
    S = ' ' + S;
}

void init()
{

}

void Solve()
{
    if (S[1] == S[n])
        cout << (n + 1) % 2 << "\n";
    else cout << n % 2 << "\n";

}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    #ifndef ONLINE_JUDGE
        freopen(NAME".INP", "r", stdin);
        freopen(NAME".OUT", "w", stdout);
    #endif // ONLINE_JUDGE

    int TEST = 1;

    if (TEST == 0)
        cin >> TEST;

    while (TEST--)
    {
        Read();
        init();
        Solve();
    }

    return 0;
}

/*........................................................................................................................................................................................................................................................................*/
// Link problem 2: https://oj.vnoi.info/problem/bedao_g08_equal
// Code solution:

#include <bits/stdc++.h>
#define NAME "XPhuoc"

using namespace std;

#define X first
#define Y second
#define pb push_back
#define Fort(i, a, b) for (int i = (a), _b = (b); i <= _b; i++)
#define Ford(i, a, b) for (int i = (a), _b = (b); i >= _b; i--)

typedef pair<int, int> pairII;
typedef pair<int, long long> pairIL;

const long long MOD = 1e9 + 7;

template<typename T>
    void mul(T &x, T y)
    {
        x *= y;
        x %= MOD;
    }

/*..............................................................................................................................................*/

const int E = 1e3 + 7;
int n;

bitset<E> sieve;
vector<int> prime;

int a, b;

void Erasthenes(int P = 1e3)
{
    bitset<E> sieve;

    sieve.set(2);
    prime.push_back(2);

    for(int x = 3; x <= P; x += 2)
        sieve.set(x);

    int SP = sqrt(P);

    for(int x = 3; x <= P; x += 2)
        if (sieve[x])
        {
            prime.push_back(x);

            if (x > SP)
                continue;

            for(int y = x * x; y <= P; y += 2 * x)
                sieve.reset(y);
        }
}

vector<pairII> eras(int a)
{
    vector<pairII> vec;

    for(int x : prime)
    {
        if (x * x > a)
            break;

        int cnt = 0;

        while (a % x == 0)
        {
            a /= x;
            cnt++;
        }

        if (cnt > 0)
        vec.push_back({x, cnt});
    }

    if (a > 1)
        vec.push_back({a, 1});

    return vec;
}

void Read()
{
    cin >> a >> b;
}

void init()
{

}

void Solve()
{
    vector<pairII> n1 = eras(a);
    vector<pairII> n2 = eras(b);

//    for(pairII P : n1)
//        cout << P.X << " " << P.Y << "\n";
//
//    cout << "\n";

    int p1 = 0;
    int p2 = 0;

    int S1 = 0;
    int S2 = 0;

    int n = n1.size(), m = n2.size();

    while (p1 < n && p2 < m)
    {
        while (p1 < n && n1[p1].X < n2[p2].X)
            S1 += n1[p1++].Y;

        while (p2 < m && n1[p1].X > n2[p2].X)
            S2 += n2[p2++].Y;

        if (p1 < n && p2 < m && n1[p1].X == n2[p2].X)
            if (n1[p1].Y > n2[p2].Y)
                S1 += n1[p1++].Y - n2[p2++].Y;
            else S2 += n2[p2++].Y - n1[p1++].Y;
    }

    while (p1 < n)
        S1 += n1[p1++].Y;

    while (p2 < m)
        S2 += n2[p2++].Y;

    cout << max(S1, S2) << "\n";
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    #ifndef ONLINE_JUDGE
        freopen(NAME".INP", "r", stdin);
        freopen(NAME".OUT", "w", stdout);
    #endif // ONLINE_JUDGE

    Erasthenes();

    int TEST = 0;

    if (TEST == 0)
        cin >> TEST;

    while (TEST--)
    {
        Read();
        init();
        Solve();
    }

    return 0;
}

/*........................................................................................................................................................................................................................................................................*/
// Link problem 3: https://oj.vnoi.info/problem/bedao_g08_divtree
// Code solution:

#include <bits/stdc++.h>
#define NAME "XPhuoc"

using namespace std;

#define X first
#define Y second
#define pb push_back
#define Fort(i, a, b) for (int i = (a), _b = (b); i <= _b; i++)
#define Ford(i, a, b) for (int i = (a), _b = (b); i >= _b; i--)

typedef pair<int, int> pairII;
typedef pair<int, long long> pairIL;

const long long MOD = 1e9 + 7;

template<typename T>
    void mul(T &x, T y)
    {
        x *= y;
        x %= MOD;
    }

/*..............................................................................................................................................*/

const int N = 1e5;
int n;
int a[N + 7];
long long result[N + 7];
map<int, int> d[N + 7];

vector<int> g[N + 7];

const int E = 400;
bitset<E> sieve;
vector<int> prime;

int q;

long long exp(long long a, long long b)
{
    if (b == 0)
        return 1LL;

    if (b == 1)
        return a % MOD;

    long long res = exp(a, b / 2);

    mul(res, res);

    if (b % 2 == 0)
        return res;

    return res * a % MOD;
}

void Read()
{
    cin >> n >> q;

    Fort(i, 1, n)
        cin >> a[i];

    Fort(i, 1, n - 1)
    {
        int u, v;
        cin >> u >> v;

        g[u].push_back(v);
        g[v].push_back(u);
    }
}

void combine(int u, int v, map<int, int> &a, map<int, int> &b)
{
    if (a.size() < b.size())
    {
        swap(a, b);
        result[u] = result[v];
    }

    for(pairII ptr : b)
    {
        int x = ptr.X;
        int y = ptr.Y;

        long long val = a[x];

        mul(result[u], exp(val + 1, MOD - 2));

        a[x] += y;

        mul(result[u], val + y + 1);
    }
}

void DFS(int u, int par)
{
    result[u] = 1;

    for(int x : prime)
    {
        if (x * x > a[u])
            break;

        int cnt = 0;

        while (a[u] % x == 0)
        {
            a[u] /= x;
            cnt++;
        }

        if (cnt > 0)
            d[u][x] = cnt;

        mul(result[u], 1LL * cnt + 1);
    }

    if (a[u] > 1)
    {
        mul(result[u], 2LL);
        d[u][a[u]] = 1;
    }

    for(int v : g[u])
        if (v != par)
        {
            DFS(v, u);

            combine(u, v, d[u], d[v]);
        }
}

void Erasthenes(int P = 4e2)
{
    bitset<E> sieve;

    sieve.set(2);
    prime.push_back(2);

    for(int x = 3; x <= P; x += 2)
        sieve.set(x);

    int SP = sqrt(P);

    for(int x = 3; x <= P; x += 2)
        if (sieve[x])
        {
            prime.push_back(x);

            if (x > SP)
                continue;

            for(int y = x * x; y <= P; y += 2 * x)
                sieve.reset(y);
        }
}

void init()
{

}

void Solve()
{
    Erasthenes();

    DFS(1, 0);

//    Fort(i, 1, n)
//        cout << result[i] << " ";
//
//    cout << "\n";

    while (q--)
    {
        int u;
        cin >> u;

        cout << result[u] << " ";
    }
}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    #ifndef ONLINE_JUDGE
        freopen(NAME".INP", "r", stdin);
        freopen(NAME".OUT", "w", stdout);
    #endif // ONLINE_JUDGE

    int TEST = 1;

    if (TEST == 0)
        cin >> TEST;

    while (TEST--)
    {
        Read();
        init();
        Solve();
    }

    return 0;
}

/*........................................................................................................................................................................................................................................................................*/
// Link problem 4:
// Code solution:
/*........................................................................................................................................................................................................................................................................*/
// Link problem 5:
// Code solution:
/*........................................................................................................................................................................................................................................................................*/
