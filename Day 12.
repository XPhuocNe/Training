/*..............................................................................................................................................................................*/
Link problem 1: https://oj.vnoi.info/problem/bedao_g03_bonpair
Code solution:

#include <bits/stdc++.h>
#define NAME "XPhuoc"

using namespace std;

#define X first
#define Y second
#define pb push_back
#define Fort(i, a, b) for (int i = (a), _b = (b); i <= _b; i++)
#define Ford(i, a, b) for (int i = (a), _b = (b); i >= _b; i--)

typedef pair<int, int> pairII;
typedef pair<int, long long> pairIL;

template <typename T>
    bool maximize(T &x, T y)
    {
        if (x > y)
            return 0;

        x = y;
        return 1;
    }

/*..............................................................................................................................................*/

const int N = 1e4, K = 1e2;
int n;
string S;

int q;
int op;


void Read()
{
    cin >> q >> op;

    cin >> S;

    n = S.size();
    S = ' ' + S;
}

void init()
{

}

vector<int> ultra(int u, int k)
{
    vector<int> cnt(30, 0);

    for(; u <= n; u += k)
        cnt[S[u] - 'a']++;

    return cnt;
}

void Solve()
{

    while (q--)
    {
        string a;
        cin >> a;

        int m = a.size();
        a = ' ' + a;

        vector<int> dp(op + 2, 0);



        Fort(i, 1, m)
        {
            vector<int> cnt = ultra(i, m);
            int pick = *max_element(cnt.begin(), cnt.end());

            Ford(x, op, 0)
            {
                dp[x] += cnt[a[i] - 'a'];

                if (x > 0)
                    maximize(dp[x], dp[x - 1] + pick);
            }
        }





        cout << n - (*max_element(dp.begin(), dp.end())) << "\n";
    }

}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    #ifndef ONLINE_JUDGE
        freopen(NAME".INP", "r", stdin);
        freopen(NAME".OUT", "w", stdout);
    #endif // ONLINE_JUDGE

    int TEST = 1;

    if (TEST == 0)
        cin >> TEST;

    while (TEST--)
    {
        Read();
        init();
        Solve();
    }

    return 0;
}

/*..............................................................................................................................................................................*/
Link problem 2: https://oj.vnoi.info/problem/bedao_g03_strcom
Code solution:

#include <bits/stdc++.h>
#define NAME "XPhuoc"

using namespace std;

#define X first
#define Y second
#define pb push_back
#define Fort(i, a, b) for (int i = (a), _b = (b); i <= _b; i++)
#define Ford(i, a, b) for (int i = (a), _b = (b); i >= _b; i--)

typedef pair<int, int> pairII;
typedef pair<int, long long> pairIL;

template <typename T>
    bool maximize(T &x, T y)
    {
        if (x > y)
            return 0;

        x = y;
        return 1;
    }

/*..............................................................................................................................................*/

const int N = 1e4, K = 1e2;
int n;
string S;

int q;
int op;


void Read()
{
    cin >> q >> op;

    cin >> S;

    n = S.size();
    S = ' ' + S;
}

void init()
{

}

vector<int> ultra(int u, int k)
{
    vector<int> cnt(30, 0);

    for(; u <= n; u += k)
        cnt[S[u] - 'a']++;

    return cnt;
}

void Solve()
{

    while (q--)
    {
        string a;
        cin >> a;

        int m = a.size();
        a = ' ' + a;

        vector<int> dp(op + 2, 0);



        Fort(i, 1, m)
        {
            vector<int> cnt = ultra(i, m);
            int pick = *max_element(cnt.begin(), cnt.end());

            Ford(x, op, 0)
            {
                dp[x] += cnt[a[i] - 'a'];

                if (x > 0)
                    maximize(dp[x], dp[x - 1] + pick);
            }
        }





        cout << n - (*max_element(dp.begin(), dp.end())) << "\n";
    }

}
int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    #ifndef ONLINE_JUDGE
        freopen(NAME".INP", "r", stdin);
        freopen(NAME".OUT", "w", stdout);
    #endif // ONLINE_JUDGE

    int TEST = 1;

    if (TEST == 0)
        cin >> TEST;

    while (TEST--)
    {
        Read();
        init();
        Solve();
    }

    return 0;
}

/*..............................................................................................................................................................................*/
Link problem 3: https://oj.vnoi.info/problem/bedao_g03_three
Code solution:

#include <bits/stdc++.h>

using namespace std;

bool isPrime(long long n)
{
    for(long long x = 2; x * x <= n; x++)
        if (n % x == 0)
            return 0;
            
    return n > 1;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    
    int q;
    cin >> q;
    
    while (q--)
    {
        long long n;
        cin >> n;
        
        long long SP = sqrt(n);
        
        cout << (SP * SP == n && isPrime(SP)) << "\n";
    }
    
    return 0;
}

/*..............................................................................................................................................................................*/

