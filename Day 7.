/*..........................................................................................................................................................................................................................................................*/
// Link problem 1: https://codeforces.com/contest/788/problem/A
// Code solution: 
#include <bits/stdc++.h>
#define NAME "XPhuoc"

using namespace std;

#define X first
#define Y second
#define pb push_back
#define Fort(i, a, b) for (int i = (a), _b = (b); i <= _b; i++)
#define Ford(i, a, b) for (int i = (a), _b = (b); i >= _b; i--)

typedef pair<int, int> pairII;
typedef pair<int, long long > pairIL;

template <typename T>
    bool maximize(T &x, T y)
    {
        if (x > y || x == y)
            return 0;

        x = y;
        return 1;
    }

template <typename T>
    bool minimize(T &x, T y)
    {
        if (x <= y)
            return 0;

        x = y;
        return 1;
    }

/*..............................................................................................................................................*/

const int N = 1e5;
const long long INF = 1e18;

int n;
int a[N + 7];

void Read()
{
    cin >> n;

    Fort(i, 1, n)
        cin >> a[i];
}

void init()
{

}


void Solve()
{
    long long result = -INF;

    long long odd = 0;
    long long even = -INF;

    long long S = 0, x = 1;

    Fort(i, 1, n - 1)
    {
        S += x * abs(a[i] - a[i + 1]);
        x *= -1;

        maximize(result, S - odd);
        maximize(result, even - S);

        if (i % 2 == 1)
            maximize(even, S);

        if (i % 2 == 0)
            minimize(odd, S);
    }

    cout << result << "\n";
}

int main()
{
    ios::sync_with_stdio(0); cin.tie(0); cout.tie(0);

    #ifndef ONLINE_JUDGE
        freopen(NAME".INP", "r", stdin);
        freopen(NAME".OUT", "w", stdout);
    #endif // ONLINE_JUDGE

    int TEST = 1;

    if (TEST == 0)
        cin >> TEST;

    while (TEST--)
    {
        Read();
        init();
        Solve();
    }

    return 0;
}

/*..........................................................................................................................................................................................................................................................*/
